/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IFlareContractRegistry,
  IFlareContractRegistryInterface,
} from "../../../../@flarenetwork/flare-periphery-contracts/coston2/IFlareContractRegistry";

const _abi = [
  {
    inputs: [],
    name: "getAllContracts",
    outputs: [
      {
        internalType: "string[]",
        name: "_names",
        type: "string[]",
      },
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nameHash",
        type: "bytes32",
      },
    ],
    name: "getContractAddressByHash",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "getContractAddressByName",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_nameHashes",
        type: "bytes32[]",
      },
    ],
    name: "getContractAddressesByHash",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "_names",
        type: "string[]",
      },
    ],
    name: "getContractAddressesByName",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IFlareContractRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): IFlareContractRegistryInterface {
    return new Interface(_abi) as IFlareContractRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IFlareContractRegistry {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IFlareContractRegistry;
  }
}
