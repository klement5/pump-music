/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  RewardsV2Interface,
  RewardsV2InterfaceInterface,
} from "../../../../@flarenetwork/flare-periphery-contracts/coston2/RewardsV2Interface";

const _abi = [
  {
    inputs: [],
    name: "active",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardOwner",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "_rewardEpochId",
        type: "uint24",
      },
      {
        internalType: "bool",
        name: "_wrap",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bytes32[]",
            name: "merkleProof",
            type: "bytes32[]",
          },
          {
            components: [
              {
                internalType: "uint24",
                name: "rewardEpochId",
                type: "uint24",
              },
              {
                internalType: "bytes20",
                name: "beneficiary",
                type: "bytes20",
              },
              {
                internalType: "uint120",
                name: "amount",
                type: "uint120",
              },
              {
                internalType: "enum RewardsV2Interface.ClaimType",
                name: "claimType",
                type: "uint8",
              },
            ],
            internalType: "struct RewardsV2Interface.RewardClaim",
            name: "body",
            type: "tuple",
          },
        ],
        internalType: "struct RewardsV2Interface.RewardClaimWithProof[]",
        name: "_proofs",
        type: "tuple[]",
      },
    ],
    name: "claim",
    outputs: [
      {
        internalType: "uint256",
        name: "_rewardAmountWei",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardOwner",
        type: "address",
      },
    ],
    name: "getNextClaimableRewardEpochId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardEpochIdsWithClaimableRewards",
    outputs: [
      {
        internalType: "uint24",
        name: "_startEpochId",
        type: "uint24",
      },
      {
        internalType: "uint24",
        name: "_endEpochId",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardOwner",
        type: "address",
      },
    ],
    name: "getStateOfRewards",
    outputs: [
      {
        components: [
          {
            internalType: "uint24",
            name: "rewardEpochId",
            type: "uint24",
          },
          {
            internalType: "bytes20",
            name: "beneficiary",
            type: "bytes20",
          },
          {
            internalType: "uint120",
            name: "amount",
            type: "uint120",
          },
          {
            internalType: "enum RewardsV2Interface.ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "initialised",
            type: "bool",
          },
        ],
        internalType: "struct RewardsV2Interface.RewardState[][]",
        name: "_rewardStates",
        type: "tuple[][]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class RewardsV2Interface__factory {
  static readonly abi = _abi;
  static createInterface(): RewardsV2InterfaceInterface {
    return new Interface(_abi) as RewardsV2InterfaceInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RewardsV2Interface {
    return new Contract(address, _abi, runner) as unknown as RewardsV2Interface;
  }
}
