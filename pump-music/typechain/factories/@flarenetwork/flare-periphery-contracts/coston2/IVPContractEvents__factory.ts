/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IVPContractEvents,
  IVPContractEventsInterface,
} from "../../../../@flarenetwork/flare-periphery-contracts/coston2/IVPContractEvents";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "priorVotePower",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newVotePower",
        type: "uint256",
      },
    ],
    name: "Delegate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "votePower",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "Revoke",
    type: "event",
  },
] as const;

export class IVPContractEvents__factory {
  static readonly abi = _abi;
  static createInterface(): IVPContractEventsInterface {
    return new Interface(_abi) as IVPContractEventsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IVPContractEvents {
    return new Contract(address, _abi, runner) as unknown as IVPContractEvents;
  }
}
