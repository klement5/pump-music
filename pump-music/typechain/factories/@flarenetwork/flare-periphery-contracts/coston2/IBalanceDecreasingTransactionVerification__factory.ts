/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IBalanceDecreasingTransactionVerification,
  IBalanceDecreasingTransactionVerificationInterface,
} from "../../../../@flarenetwork/flare-periphery-contracts/coston2/IBalanceDecreasingTransactionVerification";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32[]",
            name: "merkleProof",
            type: "bytes32[]",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "attestationType",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "sourceId",
                type: "bytes32",
              },
              {
                internalType: "uint64",
                name: "votingRound",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "lowestUsedTimestamp",
                type: "uint64",
              },
              {
                components: [
                  {
                    internalType: "bytes32",
                    name: "transactionId",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "sourceAddressIndicator",
                    type: "bytes32",
                  },
                ],
                internalType:
                  "struct IBalanceDecreasingTransaction.RequestBody",
                name: "requestBody",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint64",
                    name: "blockNumber",
                    type: "uint64",
                  },
                  {
                    internalType: "uint64",
                    name: "blockTimestamp",
                    type: "uint64",
                  },
                  {
                    internalType: "bytes32",
                    name: "sourceAddressHash",
                    type: "bytes32",
                  },
                  {
                    internalType: "int256",
                    name: "spentAmount",
                    type: "int256",
                  },
                  {
                    internalType: "bytes32",
                    name: "standardPaymentReference",
                    type: "bytes32",
                  },
                ],
                internalType:
                  "struct IBalanceDecreasingTransaction.ResponseBody",
                name: "responseBody",
                type: "tuple",
              },
            ],
            internalType: "struct IBalanceDecreasingTransaction.Response",
            name: "data",
            type: "tuple",
          },
        ],
        internalType: "struct IBalanceDecreasingTransaction.Proof",
        name: "_proof",
        type: "tuple",
      },
    ],
    name: "verifyBalanceDecreasingTransaction",
    outputs: [
      {
        internalType: "bool",
        name: "_proved",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IBalanceDecreasingTransactionVerification__factory {
  static readonly abi = _abi;
  static createInterface(): IBalanceDecreasingTransactionVerificationInterface {
    return new Interface(
      _abi
    ) as IBalanceDecreasingTransactionVerificationInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IBalanceDecreasingTransactionVerification {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IBalanceDecreasingTransactionVerification;
  }
}
