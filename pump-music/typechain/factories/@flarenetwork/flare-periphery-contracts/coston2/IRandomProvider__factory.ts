/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IRandomProvider,
  IRandomProviderInterface,
} from "../../../../@flarenetwork/flare-periphery-contracts/coston2/IRandomProvider";

const _abi = [
  {
    inputs: [],
    name: "getCurrentRandom",
    outputs: [
      {
        internalType: "uint256",
        name: "_randomNumber",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentRandomWithQuality",
    outputs: [
      {
        internalType: "uint256",
        name: "_randomNumber",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isSecureRandom",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentRandomWithQualityAndTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "_randomNumber",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isSecureRandom",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_randomTimestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IRandomProvider__factory {
  static readonly abi = _abi;
  static createInterface(): IRandomProviderInterface {
    return new Interface(_abi) as IRandomProviderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IRandomProvider {
    return new Contract(address, _abi, runner) as unknown as IRandomProvider;
  }
}
