/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IFdcRequestFeeConfigurations,
  IFdcRequestFeeConfigurationsInterface,
} from "../../../../@flarenetwork/flare-periphery-contracts/coston2/IFdcRequestFeeConfigurations";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "attestationType",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "source",
        type: "bytes32",
      },
    ],
    name: "TypeAndSourceFeeRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "attestationType",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "source",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "TypeAndSourceFeeSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "getRequestFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IFdcRequestFeeConfigurations__factory {
  static readonly abi = _abi;
  static createInterface(): IFdcRequestFeeConfigurationsInterface {
    return new Interface(_abi) as IFdcRequestFeeConfigurationsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IFdcRequestFeeConfigurations {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IFdcRequestFeeConfigurations;
  }
}
