/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "../../../common";

export interface IGovernanceVotePowerInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "delegate"
      | "getDelegateOfAt"
      | "getDelegateOfAtNow"
      | "getVotes"
      | "undelegate"
      | "votePowerOfAt"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "delegate",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getDelegateOfAt",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getDelegateOfAtNow",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getVotes",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "undelegate",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "votePowerOfAt",
    values: [AddressLike, BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: "delegate", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getDelegateOfAt",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDelegateOfAtNow",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getVotes", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "undelegate", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "votePowerOfAt",
    data: BytesLike
  ): Result;
}

export interface IGovernanceVotePower extends BaseContract {
  connect(runner?: ContractRunner | null): IGovernanceVotePower;
  waitForDeployment(): Promise<this>;

  interface: IGovernanceVotePowerInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  delegate: TypedContractMethod<[_to: AddressLike], [void], "nonpayable">;

  getDelegateOfAt: TypedContractMethod<
    [_who: AddressLike, _blockNumber: BigNumberish],
    [string],
    "view"
  >;

  getDelegateOfAtNow: TypedContractMethod<
    [_who: AddressLike],
    [string],
    "view"
  >;

  getVotes: TypedContractMethod<[_who: AddressLike], [bigint], "view">;

  undelegate: TypedContractMethod<[], [void], "nonpayable">;

  votePowerOfAt: TypedContractMethod<
    [_who: AddressLike, _blockNumber: BigNumberish],
    [bigint],
    "view"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "delegate"
  ): TypedContractMethod<[_to: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "getDelegateOfAt"
  ): TypedContractMethod<
    [_who: AddressLike, _blockNumber: BigNumberish],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "getDelegateOfAtNow"
  ): TypedContractMethod<[_who: AddressLike], [string], "view">;
  getFunction(
    nameOrSignature: "getVotes"
  ): TypedContractMethod<[_who: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "undelegate"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "votePowerOfAt"
  ): TypedContractMethod<
    [_who: AddressLike, _blockNumber: BigNumberish],
    [bigint],
    "view"
  >;

  filters: {};
}
